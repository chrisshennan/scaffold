workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push"'

stages:
  - build_test
  - test
  - version
  - trigger_prod_build

app_build_test:
  stage: build_test
  image: docker
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - docker build --target=app-dev --cache-from ${CI_REGISTRY_IMAGE}:app-latest -t ${CI_REGISTRY_IMAGE}:test-${CI_COMMIT_SHORT_SHA} --build-arg APP_ENV="dev" --build-arg COMPOSER_ARG=" --ignore-platform-reqs --no-scripts" .
    - docker push ${CI_REGISTRY_IMAGE}:test-${CI_COMMIT_SHORT_SHA}

app_test:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:test-${CI_COMMIT_SHORT_SHA}
  variables:
    GIT_STRATEGY: none
    APP_ENV: test
  before_script:
    - cd /app
    - echo "APP_ENV=test" > .env.local
  script:
    - ./bin/console doctrine:database:create
#    - docker run --rm -v ${PWD}:/app -w /app idlemoments/php:8.3-fpm bash -c "APP_ENV=test doctrine:database:validate"
    - ./vendor/bin/phpstan analyse
    - XDEBUG_MODE=coverage ./vendor/bin/phpunit --log-junit $CI_PROJECT_DIR/phpunit-junit-report.xml --coverage-text --colors=never --coverage-cobertura=$CI_PROJECT_DIR/coverage.cobertura.xml
#    - mv phpunit-junit-report.xml $CI_PROJECT_DIR/
#    - mv coverage.cobertura.xml $CI_PROJECT_DIR/
  artifacts:
    when: on_success
    expire_in: 7 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.cobertura.xml
      junit: phpunit-junit-report.xml

semantic-versioning:
  stage: version
  image: hoppr/semantic-release
  variables:
    GITLAB_TOKEN: $GITLAB_TOKEN_SEMANTIC_VERSIONING
  script:
    - semantic-release
  artifacts:
    paths:
      - release.env
    reports:
      dotenv: release.env
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success

app_trigger_prod_build:
  stage: trigger_prod_build
  variables:
    PARENT_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
  allow_failure: true
  trigger:
    include: .gitlab-ci-prod.yml
    forward:
      pipeline_variables: true
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
